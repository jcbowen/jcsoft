{"version":3,"sources":["webpack:///./examples/views/readIdCard/index.vue?c433","webpack:///./examples/views/readIdCard/index.vue?047a","webpack:///./packages/lotussmart/index.js","webpack:///examples/views/readIdCard/index.vue","webpack:///./examples/views/readIdCard/index.vue?51d7","webpack:///./examples/views/readIdCard/index.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","attrs","slot","staticStyle","ref","form","state","type","_s","msg","photo","model","value","callback","$$v","$set","expression","_e","_l","item","ind","key","title","on","$event","execStringCommand","command","staticRenderFns","Method","that","strIp","strPort","logs","setLog","options","util","data","console","params","protocolStr","document","onopen","onclose","onmessage","onerror","WebSocket","evt","event","arrString","strCommand","socketStatus","lotussmart","sfz","name","components","LayuiCode","ip","port","log","commands","loading","window","methods","res","php","date","ltsSfz","set","close","$loading","lock","text","spinner","background","connectServer","socket","status","getSocketStatus","split","length","$message","error","component"],"mappings":"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","file":"js/chunk-5fb0c688.92652c0b.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=scss&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"readIdCard\"},[_c('h2',[_vm._v(\"二代身份证读卡器演示\")]),_c('el-card',{staticClass:\"box-card\",attrs:{\"shadow\":\"hover\"}},[_c('div',{staticClass:\"clearfix\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(\"基础描述\")])]),_c('div',{staticClass:\"text item\"},[_c('p',[_c('strong',[_vm._v(\"硬件设备：\")]),_vm._v(\"诺塔斯 NTS-L7-2IN1 二合一读卡器\")]),_c('p',[_c('strong',[_vm._v(\"exe软件见引用资源：\")]),_vm._v(\"LocalWsServer20200706.zip\")]),_c('p',[_c('strong',[_vm._v(\"电脑系统：\")]),_vm._v(\"win7/10\")]),_c('p',{staticStyle:{\"margin-top\":\"2rem\"}},[_c('strong',[_vm._v(\"说明：\")])]),_c('p',{staticStyle:{\"text-indent\":\"2em\"}},[_vm._v(\"先将硬件设备插入电脑，然后打开LocalWsServer软件，在软件配置中配置账号密码，并勾选自动读取，接着保存参数即可。\")]),_c('p',{staticStyle:{\"text-indent\":\"2em\"}},[_vm._v(\"测试账号：20002\")]),_c('p',{staticStyle:{\"text-indent\":\"2em\"}},[_vm._v(\"测试密码：123456\")]),_c('p',{staticStyle:{\"text-indent\":\"2em\"}},[_vm._v(\" 正式账号在\"),_c('a',{attrs:{\"href\":\"http://www.shenfenshibie.com/\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"http://www.shenfenshibie.com/\")]),_vm._v(\" 申请，并联系设备商审核 \")])])]),_c('el-card',{staticClass:\"box-card\",attrs:{\"shadow\":\"hover\"}},[_c('div',{staticClass:\"clearfix\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(\"本页面将把lotussmart，暴露到window变量中，调用方法示例：\")])]),_c('div',{staticClass:\"text item\"},[_c('layui-code',{attrs:{\"code\":'// 该方法仅适用于自动读卡\\n' +\n                     'lotussmart.sfz.runReadIDCard({\\n'+\n'    onmessage: (cardInfo)=>{\\n'+\n'        console.log(cardInfo)\\n'+\n'    }\\n'+\n'})',\"title\":'自动读取身份证信息'}})],1)]),_c('el-card',{staticClass:\"box-card\",attrs:{\"shadow\":\"hover\"}},[_c('div',{staticClass:\"clearfix\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(\"直接测试\")])]),_c('div',{staticClass:\"text item\"},[_c('p',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"使用本控制台测试时，请先打开LocalWsServer工具。并按照基础描述配置后再进行测试\")]),_c('el-divider'),_c('el-row',{attrs:{\"gutter\":25}},[_c('el-col',{attrs:{\"xs\":24,\"sm\":24,\"md\":15,\"lg\":15,\"xl\":15}},[_c('el-form',{ref:\"form\",attrs:{\"label-position\":\"top\",\"model\":_vm.form,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"服务状态\"}},[_c('el-tag',{attrs:{\"type\":_vm.form.state.type}},[_vm._v(_vm._s(_vm.form.state.msg))])],1),_c('el-form-item',{attrs:{\"label\":\"照片\"}},[_c('el-image',{staticStyle:{\"width\":\"102px\",\"height\":\"126px\"},attrs:{\"src\":_vm.form.photo,\"preview-src-list\":[_vm.form.photo]}},[_c('div',{staticClass:\"image-slot\",attrs:{\"slot\":\"error\"},slot:\"error\"},[_c('i',{staticClass:\"el-icon-picture-outline\"})])])],1),(_vm.form.log)?_c('el-form-item',{attrs:{\"label\":\"日志\"}},[_c('div',{staticClass:\"showLog\"},[_c('el-input',{attrs:{\"type\":\"textarea\",\"rows\":15,\"size\":'medium'},model:{value:(_vm.form.log),callback:function ($$v) {_vm.$set(_vm.form, \"log\", $$v)},expression:\"form.log\"}})],1)]):_vm._e()],1)],1),_c('el-col',{attrs:{\"xs\":24,\"sm\":24,\"md\":9,\"lg\":9,\"xl\":9}},[_c('el-form',{ref:\"form\",attrs:{\"label-position\":\"left\",\"model\":_vm.form,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"服务IP\"}},[_c('el-input',{model:{value:(_vm.form.ip),callback:function ($$v) {_vm.$set(_vm.form, \"ip\", $$v)},expression:\"form.ip\"}})],1),_c('el-form-item',{attrs:{\"label\":\"服务端口\"}},[_c('el-input',{model:{value:(_vm.form.port),callback:function ($$v) {_vm.$set(_vm.form, \"port\", $$v)},expression:\"form.port\"}})],1),_c('el-divider',{attrs:{\"content-position\":\"center\"}},[_vm._v(\"命令模拟\")]),_vm._l((_vm.commands),function(item,ind){return _c('el-form-item',{key:ind,attrs:{\"label\":item.title}},[_c('el-button',{on:{\"click\":function($event){return _vm.execStringCommand(item.command)}}},[_vm._v(_vm._s(item.command))])],1)})],2)],1)],1)],1)])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import util from '../utils/jiuchet';\n\nlet Method = function () {\n    var that = this;\n    that.config = {\n        strIp: '127.0.0.1'\n        , strPort: '31213'\n        , logs: ''\n        , setLog: false\n    };\n    that.wsUrl = ''\n    that.socket = null;\n    that.nCommandIndex = 0;\n    // that.strLastResult = '';\n    that.data = '';\n};\n\n// 修改配置信息\nMethod.prototype.set = function (options) {\n    var that = this;\n    // 引入vueModel\n    options.vm && (that.vm = options.vm);\n    that.config = util.extend(true, that.config, options);\n\n    return that;\n}\n\n// 设置\nMethod.prototype.setLog = function (...data) {\n    let that = this;\n\n    if (typeof that.config.setLog === 'function') {\n        return that.config.setLog.call(that, ...data);\n    } else if (that.config.setLog) {\n        // 打开setLog，不预设的清空下输出到控制台\n        return console.log(...data);\n    }\n\n    return false;\n}\n\n/**\n * 和本地websocket环境建立通讯\n */\nMethod.prototype.connectServer = function (params) {\n    var that = this\n        , protocolStr = document.location.protocol;\n\n    params = util.extend(true, {\n        onopen: {},\n        onclose: {},\n        onmessage: {},\n        onerror: {}\n    }, that.config, params);\n\n    try {\n        that.nCommandIndex = 0;\n        if (protocolStr === \"https:\") {\n            that.wsUrl = 'wss://' + that.config.strIp + ':' + that.config.strPort;\n        } else {\n            that.wsUrl = 'ws://' + that.config.strIp + ':' + that.config.strPort;\n        }\n        that.socket = new WebSocket(that.wsUrl);\n    } catch (evt) {\n        that.setLog('#new WebSocket error:' + evt.data);\n        that.socket = null;\n        return;\n    }\n    that.socket.onopen = function (event) {\n        that.setLog('#msg: 服务器连接成功');\n        typeof params.onopen === 'function' && params.onopen.call(that, event);\n    };\n    that.socket.onclose = function (event) {\n        that.setLog('#断开连接:' + event.wasClean);\n        typeof params.onclose === 'function' && params.onclose.call(that, event);\n    };\n    that.socket.onmessage = function (event) {\n        var arrString = [];\n        that.strLastResult = event.data;\n        arrString = that.strLastResult.split(',');\n        if ('ReadId' === arrString[0]) {\n            if (arrString.length > 11) {\n                that.data = '' +\n                    // arrString[0] + '|' +\n                    // arrString[1] + '|' +\n                    // arrString[2] + '|' +\n                    arrString[3] + '|' +\n                    arrString[4] + '|' +\n                    arrString[5] + '|' +\n                    arrString[6] + '|' +\n                    arrString[7] + '|' +\n                    arrString[8] + '|' +\n                    arrString[9] + '|' +\n                    arrString[10] + '|' +\n                    'data:image/jpg;base64,' + arrString[11];\n                that.setLog('#收到数据:' + that.data)\n                // that.photo = 'data:image/jpg;base64,' + arrString[11];\n            } else {\n                that.setLog('#收到数据:' + event.data);\n            }\n        } else if ('ReadIdBuffer' === arrString[0]) {\n            if (arrString.length > 11) {\n                that.data = '' +\n                    // arrString[0] + '|' +\n                    // arrString[1] + '|' +\n                    // arrString[2] + '|' +\n                    arrString[3] + '|' +\n                    arrString[4] + '|' +\n                    arrString[5] + '|' +\n                    arrString[6] + '|' +\n                    arrString[7] + '|' +\n                    arrString[8] + '|' +\n                    arrString[9] + '|' +\n                    arrString[10] + '|' +\n                    'data:image/jpg;base64,' + arrString[11];\n                that.setLog('#收到数据:' + that.data);\n            } else {\n                that.setLog('#收到数据:' + event.data);\n            }\n        } else if ('ReadIdJpeg' === arrString[0]) {\n            if (arrString.length > 3) {\n                if (arrString[3].length > 200) {\n                    that.data = that.photo = 'data:image/jpg;base64,' + arrString[3];\n                    that.setLog('#收到数据:' + that.photo);\n                } else {\n                    that.setLog('#收到数据:' + event.data);\n                }\n            } else {\n                that.setLog('#收到数据:' + event.data);\n            }\n        } else {\n            that.setLog('#收到数据:' + event.data);\n        }\n        typeof params.onmessage === 'function' && params.onmessage.call(that, event, that.data);\n    };\n    that.socket.onerror = function (event) {\n        that.setLog('#disconnected:' + (event.message || '服务未启用或服务地址错误'));\n        typeof params.onerror === 'function' && params.onerror.call(that, event);\n    };\n}\n\n/**\n * 获取通讯状态\n * @returns {string}\n */\nMethod.prototype.getSocketStatus = function () {\n    var that = this;\n    if (null == that.socket) {\n        that.setLog('未连接websocket服务');\n        return '0';\n    }\n    switch (that.socket.readyState) {\n        case that.socket.CONNECTING:\n            that.setLog(\"websocket服务连接中\");\n            return '1';\n\n        case that.socket.OPEN:\n            that.setLog(\"websocket服务连接成功\");\n            return '2';\n\n        case that.socket.CLOSING:\n            that.setLog(\"websocket服务关闭中\");\n            return '3';\n\n        case that.socket.CLOSED:\n            that.setLog('websocket服务已关闭');\n            return '4';\n        default:\n            that.setLog(\"未知错误\");\n            return '-1';\n    }\n}\n\n/**\n * 通过websocket发送字符串命令\n * @param strCommand\n */\nMethod.prototype.execStringCommand = function (strCommand) {\n    var that = this;\n    that.strLastResult = '';\n    that.nCommandIndex++;\n    if (that.getSocketStatus() === '2') {\n        that.socket.send(strCommand + ',' + that.nCommandIndex);\n    } else {\n        that.setLog('#send failed. websocket not open. please check.');\n    }\n    return that;\n}\n\n/**\n * 读取身份证信息\n */\nMethod.prototype.runReadIDCard = function (params) {\n    var that = this;\n    let socketStatus = that.getSocketStatus();\n\n    // 在open方法中加入重新唤起读卡操作的动作\n    if (typeof params.onopen === 'function') {\n        params.onopen = (event) => {\n            params.onopen.call(that, event);\n            if (socketStatus === '1' || socketStatus === '0') that.execStringCommand('ReadIdBuffer');\n        }\n    } else {\n        params.onopen = (event) => {\n            if (socketStatus === '1' || socketStatus === '0') that.execStringCommand('ReadIdBuffer');\n        }\n    }\n\n    if (socketStatus !== '2') {\n        return that.connectServer(params);\n    }\n    // 从缓存中读取数据\n    return that.execStringCommand('ReadIdBuffer');\n}\n\nMethod.prototype.getLast = function () {\n    return this.data;\n}\n\nMethod.prototype.closeConnection = function () {\n    var that = this;\n    that.execStringCommand('CloseConnection');\n}\n\nlet lotussmart = {\n    sfz: new Method()\n};\n\nexport {lotussmart}\n","<template>\n    <div class=\"readIdCard\">\n        <h2>二代身份证读卡器演示</h2>\n\n        <el-card class=\"box-card\" shadow=\"hover\">\n            <div slot=\"header\" class=\"clearfix\">\n                <span>基础描述</span>\n            </div>\n            <div class=\"text item\">\n                <p><strong>硬件设备：</strong>诺塔斯 NTS-L7-2IN1 二合一读卡器</p>\n                <p><strong>exe软件见引用资源：</strong>LocalWsServer20200706.zip</p>\n                <p><strong>电脑系统：</strong>win7/10</p>\n                <p style=\"margin-top: 2rem\"><strong>说明：</strong></p>\n                <p style=\"text-indent: 2em;\">先将硬件设备插入电脑，然后打开LocalWsServer软件，在软件配置中配置账号密码，并勾选自动读取，接着保存参数即可。</p>\n                <p style=\"text-indent: 2em;\">测试账号：20002</p>\n                <p style=\"text-indent: 2em;\">测试密码：123456</p>\n                <p style=\"text-indent: 2em;\">\n                    正式账号在<a href=\"http://www.shenfenshibie.com/\" target=\"_blank\"\n                            rel=\"noopener\">http://www.shenfenshibie.com/</a>&nbsp;申请，并联系设备商审核\n                </p>\n            </div>\n        </el-card>\n\n\n        <el-card class=\"box-card\" shadow=\"hover\">\n            <div slot=\"header\" class=\"clearfix\">\n                <span>本页面将把lotussmart，暴露到window变量中，调用方法示例：</span>\n            </div>\n            <div class=\"text item\">\n                <layui-code\n                    :code=\"'// 该方法仅适用于自动读卡\\n' +\n                     'lotussmart.sfz.runReadIDCard({\\n'+\n'    onmessage: (cardInfo)=&gt;{\\n'+\n'        console.log(cardInfo)\\n'+\n'    }\\n'+\n'})'\"\n                    :title=\"'自动读取身份证信息'\"\n                />\n            </div>\n        </el-card>\n        <el-card class=\"box-card\" shadow=\"hover\">\n            <div slot=\"header\" class=\"clearfix\">\n                <span>直接测试</span>\n            </div>\n            <div class=\"text item\">\n                <p style=\"text-align: center\">使用本控制台测试时，请先打开LocalWsServer工具。并按照基础描述配置后再进行测试</p>\n                <el-divider></el-divider>\n                <el-row :gutter=\"25\">\n                    <el-col :xs=\"24\" :sm=\"24\" :md=\"15\" :lg=\"15\" :xl=\"15\">\n                        <el-form label-position=\"top\" ref=\"form\" :model=\"form\" label-width=\"100px\">\n                            <el-form-item label=\"服务状态\">\n                                <el-tag :type=\"form.state.type\">{{ form.state.msg }}</el-tag>\n                            </el-form-item>\n                            <el-form-item label=\"照片\">\n                                <el-image\n                                    :src=\"form.photo\"\n                                    :preview-src-list=\"[form.photo]\"\n                                    style=\"width: 102px; height: 126px\"\n                                >\n                                    <div slot=\"error\" class=\"image-slot\">\n                                        <i class=\"el-icon-picture-outline\"></i>\n                                    </div>\n                                </el-image>\n                            </el-form-item>\n                            <el-form-item v-if=\"form.log\" label=\"日志\">\n                                <div class=\"showLog\">\n                                    <el-input\n                                        type=\"textarea\"\n                                        v-model=\"form.log\"\n                                        :rows=\"15\"\n                                        :size=\"'medium'\"\n                                    />\n                                </div>\n                            </el-form-item>\n                        </el-form>\n                    </el-col>\n                    <el-col :xs=\"24\" :sm=\"24\" :md=\"9\" :lg=\"9\" :xl=\"9\">\n                        <el-form label-position=\"left\" ref=\"form\" :model=\"form\" label-width=\"100px\">\n                            <el-form-item label=\"服务IP\">\n                                <el-input v-model=\"form.ip\"></el-input>\n                            </el-form-item>\n                            <el-form-item label=\"服务端口\">\n                                <el-input v-model=\"form.port\"></el-input>\n                            </el-form-item>\n                            <el-divider content-position=\"center\">命令模拟</el-divider>\n\n                            <el-form-item v-for=\"(item, ind) in commands\" :key=\"ind\"\n                                          :label=\"item.title\"\n                            >\n                                <el-button @click=\"execStringCommand(item.command)\">{{ item.command }}</el-button>\n                            </el-form-item>\n\n                        </el-form>\n                    </el-col>\n                </el-row>\n            </div>\n        </el-card>\n\n    </div>\n</template>\n\n<script>\nimport {lotussmart} from \"../../../packages/lotussmart\";\nimport LayuiCode from \"../../../packages/layui/modules/code\";\nimport php from '../../../packages/utils/php'\n\nexport default {\n    name: 'Test',\n    components: {LayuiCode},\n    data() {\n        return {\n            form: {\n                ip: '127.0.0.1',\n                port: '31213',\n                state: {\n                    type: 'info',\n                    msg: '未连接'\n                },\n                photo: '',\n                log: ''\n            },\n            commands: [\n                {\n                    title: '连接服务',\n                    command: 'ConnectServer'\n                },\n                {\n                    title: '关闭连接',\n                    command: 'CloseConnection'\n                },\n                {\n                    title: '连接状态',\n                    command: 'ConnectionStatus'\n                },\n                {\n                    title: 'MCU序列号',\n                    command: 'GetMcuSerailNo'\n                },\n                {\n                    title: '蜂鸣',\n                    command: 'Beep'\n                },\n                {\n                    title: '读二代证',\n                    command: 'ReadId'\n                },\n                {\n                    title: '读二代证缓冲',\n                    command: 'ReadIdBuffer'\n                },\n                {\n                    title: '读照片',\n                    command: 'ReadIdJpeg'\n                },\n                {\n                    title: '清除读取缓冲',\n                    command: 'ClearIdBuffer'\n                },\n                {\n                    title: '清除日志',\n                    command: 'ClearLog'\n                },\n            ],\n            loading: false\n        }\n    },\n    created() {\n    },\n    mounted() {\n        window.lotussmart = lotussmart;\n    },\n    methods: {\n        setLog(...res) {\n            if (typeof res[0] === 'string') {\n                let log = '';\n                log += php.date('Y-m-d H:i:s') + '\\n';\n                log += res[0] + '\\n\\n';\n                this.form.log = log + this.form.log;\n            }\n        },\n        execStringCommand(strCommand) {\n            let ltsSfz = lotussmart.sfz.set({\n                strIp: this.form.ip,\n                strPort: this.form.port,\n                setLog: this.setLog,\n                onopen: () => {\n                    this.form.state = {\n                        type: 'success',\n                        msg: 'Socket 服务连接成功'\n                    };\n                    this.loading.close()\n                },\n                onclose: () => {\n                    this.form.state = {\n                        type: 'warning',\n                        msg: 'Socket 服务已关闭'\n                    };\n                    this.loading.close()\n                },\n                onerror: () => {\n                    this.form.state = {\n                        type: 'danger',\n                        msg: 'Socket Error'\n                    };\n                    this.loading.close()\n                },\n            })\n\n            switch (strCommand) {\n                case 'ConnectServer':\n                    this.loading = this.$loading({\n                        lock: true,\n                        text: '服务连接中。。。',\n                        spinner: 'el-icon-loading',\n                        background: 'rgba(0, 0, 0, 0.7)'\n                    });\n                    return ltsSfz.connectServer();\n                case 'CloseConnection':\n                    ltsSfz.socket.close();\n                    return this.form.state = {\n                        type: 'warning',\n                        msg: 'Socket 服务已关闭'\n                    };\n                case 'ConnectionStatus':\n                    let status = ltsSfz.getSocketStatus();\n                    switch (true) {\n                        case status === '0':\n                            this.form.state = {\n                                type: 'info',\n                                msg: '未连接'\n                            };\n                            break;\n                        case (status === '1' || status === '2'):\n                            this.form.state = {\n                                type: 'success',\n                                msg: 'Socket 服务连接成功'\n                            };\n                            break;\n                        case (status === '3' || status === '4'):\n                            this.form.state = {\n                                type: 'warning',\n                                msg: 'Socket 服务已关闭'\n                            };\n                            break;\n                        default:\n                            this.form.state = {\n                                type: 'danger',\n                                msg: 'Socket Error'\n                            };\n                    }\n                    return true;\n                case 'ReadIdJpeg':\n                    ltsSfz.set({\n                        onmessage: (event, data) => {\n                            this.setLog(event.data)\n                            let arrString = event.data.split(',');\n                            if (arrString.length > 3) {\n                                if (arrString[3].length > 200) {\n                                    this.form.photo = 'data:image/jpg;base64,' + arrString[3];\n                                } else {\n                                    this.$message.error(arrString[3])\n                                }\n                            }\n                        }\n                    })\n                    break;\n                case 'ClearLog':\n                    return this.form.log = '';\n            }\n            return ltsSfz.execStringCommand(strCommand);\n        }\n    },\n}\n</script>\n\n<style lang=\"scss\">\n.text {\n    font-size: 15px;\n}\n\n.item {\n    margin-bottom: 30px;\n}\n\n.clearfix:before,\n.clearfix:after {\n    display: table;\n    content: \"\";\n}\n\n.clearfix:after {\n    clear: both\n}\n\n\n.readIdCard {\n    .el-card:first-child {\n        margin-top: 0;\n    }\n\n    .el-card {\n        margin-top: 28px;\n    }\n\n    .image-slot {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        width: 100%;\n        height: 100%;\n        background: #f5f7fa;\n        color: #909399;\n        font-size: 14px;\n    }\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=073bf03e&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}