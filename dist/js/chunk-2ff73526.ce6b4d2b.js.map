{"version":3,"sources":["webpack:///./examples/views/websocket/index.vue?d931","webpack:///./examples/views/websocket/index.vue?f967","webpack:///examples/views/websocket/index.vue","webpack:///./examples/views/websocket/index.vue?e2f1","webpack:///./examples/views/websocket/index.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","attrs","slot","staticStyle","ref","form","state","type","_s","msg","model","value","callback","$$v","$set","expression","_e","WS_type","protocolStr","_l","item","ind","directives","name","rawName","command","key","title","on","$event","execStringCommand","staticRenderFns","components","LayuiCode","domain","port","path","log","wsUrl","onWS","onopen","onclose","onmessage","onerror","commands","socket","loading","onChangeQuery","$route","document","location","protocol","make_wsUrl","event","setLog","wasClean","data","message","window","WS","methods","res","php","date","console","strCommand","$loading","lock","text","spinner","background","connectServer","send","close","status","getSocketStatus","auto","that","WebSocket","evt","call","readyState","CONNECTING","OPEN","CLOSING","CLOSED","route","queryDomain","query","queryPort","watch","socketStatus","component"],"mappings":"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","file":"js/chunk-2ff73526.ce6b4d2b.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=scss&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"readIdCard\"},[_c('h2',[_vm._v(\"WebSocket\")]),_c('el-card',{staticClass:\"box-card\",attrs:{\"shadow\":\"hover\"}},[_c('div',{staticClass:\"clearfix\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(\"直接测试\")])]),_c('div',{staticClass:\"text item\"},[_c('p',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"使用本控制台测试时，请先配置WebSocket\")]),_c('el-divider'),_c('el-row',{attrs:{\"gutter\":25}},[_c('el-col',{attrs:{\"xs\":24,\"sm\":24,\"md\":13,\"lg\":13,\"xl\":13}},[_c('el-form',{ref:\"form\",attrs:{\"label-position\":\"top\",\"model\":_vm.form,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"服务状态\"}},[_c('el-tag',{attrs:{\"type\":_vm.form.state.type}},[_vm._v(_vm._s(_vm.form.state.msg))])],1),(_vm.form.log)?_c('el-form-item',{attrs:{\"label\":\"日志\"}},[_c('div',{staticClass:\"showLog\"},[_c('el-input',{attrs:{\"type\":\"textarea\",\"rows\":15,\"size\":'medium'},model:{value:(_vm.form.log),callback:function ($$v) {_vm.$set(_vm.form, \"log\", $$v)},expression:\"form.log\"}})],1)]):_vm._e()],1)],1),_c('el-col',{attrs:{\"xs\":24,\"sm\":24,\"md\":11,\"lg\":11,\"xl\":11}},[_c('el-form',{ref:\"form\",attrs:{\"label-position\":\"left\",\"model\":_vm.form,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"协议类型\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择协议类型\"},model:{value:(_vm.WS_type),callback:function ($$v) {_vm.WS_type=$$v},expression:\"WS_type\"}},[_c('el-option',{attrs:{\"label\":\"ws\",\"value\":\"ws://\",\"disabled\":_vm.protocolStr === 'https:'}}),_c('el-option',{attrs:{\"label\":\"wss\",\"value\":\"wss://\"}})],1),(_vm.protocolStr === 'https:')?_c('el-tag',{attrs:{\"type\":\"danger\"}},[_vm._v(\"https下仅能使用wss://连接\")]):_vm._e()],1),_c('el-form-item',{attrs:{\"label\":\"服务端口\"}},[_c('el-input',{model:{value:(_vm.form.port),callback:function ($$v) {_vm.$set(_vm.form, \"port\", $$v)},expression:\"form.port\"}})],1),_c('el-form-item',{attrs:{\"label\":\"服务地址\"}},[_c('el-input',{model:{value:(_vm.form.domain),callback:function ($$v) {_vm.$set(_vm.form, \"domain\", $$v)},expression:\"form.domain\"}})],1),_c('el-form-item',{attrs:{\"label\":\"服务路径\"}},[_c('el-input',{model:{value:(_vm.form.path),callback:function ($$v) {_vm.$set(_vm.form, \"path\", $$v)},expression:\"form.path\"}})],1),_c('el-form-item',{attrs:{\"label\":\"消息内容\"}},[_c('el-input',{staticClass:\"input-with-select\",attrs:{\"type\":\"textarea\",\"placeholder\":\"请输入消息内容\\n\\n输入内容后【发送】按钮将会出现\",\"rows\":\"5\"},model:{value:(_vm.form.msg),callback:function ($$v) {_vm.$set(_vm.form, \"msg\", $$v)},expression:\"form.msg\"}})],1),_c('el-divider',{attrs:{\"content-position\":\"center\"}},[_vm._v(\"命令模拟\")]),_vm._l((_vm.commands),function(item,ind){return _c('el-form-item',{directives:[{name:\"show\",rawName:\"v-show\",value:(item.command === 'Send' ? (_vm.form.msg?true:false) : true),expression:\"item.command === 'Send' ? (form.msg?true:false) : true\"}],key:ind,attrs:{\"label\":item.title}},[_c('el-button',{attrs:{\"type\":item.command === 'Send'?'primary':''},on:{\"click\":function($event){return _vm.execStringCommand(item.command)}}},[_vm._v(_vm._s(item.command)+\" \")])],1)})],2)],1)],1)],1)])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"readIdCard\">\n        <h2>WebSocket</h2>\n        <el-card class=\"box-card\" shadow=\"hover\">\n            <div slot=\"header\" class=\"clearfix\">\n                <span>直接测试</span>\n            </div>\n            <div class=\"text item\">\n                <p style=\"text-align: center\">使用本控制台测试时，请先配置WebSocket</p>\n                <el-divider></el-divider>\n                <el-row :gutter=\"25\">\n                    <el-col :xs=\"24\" :sm=\"24\" :md=\"13\" :lg=\"13\" :xl=\"13\">\n                        <el-form label-position=\"top\" ref=\"form\" :model=\"form\" label-width=\"100px\">\n                            <el-form-item label=\"服务状态\">\n                                <el-tag :type=\"form.state.type\">{{ form.state.msg }}</el-tag>\n                            </el-form-item>\n                            <el-form-item v-if=\"form.log\" label=\"日志\">\n                                <div class=\"showLog\">\n                                    <el-input\n                                        type=\"textarea\"\n                                        v-model=\"form.log\"\n                                        :rows=\"15\"\n                                        :size=\"'medium'\"\n                                    />\n                                </div>\n                            </el-form-item>\n                        </el-form>\n                    </el-col>\n                    <el-col :xs=\"24\" :sm=\"24\" :md=\"11\" :lg=\"11\" :xl=\"11\">\n                        <el-form label-position=\"left\" ref=\"form\" :model=\"form\" label-width=\"100px\">\n                            <el-form-item label=\"协议类型\">\n                                <el-select v-model=\"WS_type\" placeholder=\"请选择协议类型\">\n                                    <el-option label=\"ws\" value=\"ws://\"\n                                               :disabled=\"protocolStr === 'https:'\"></el-option>\n                                    <el-option label=\"wss\" value=\"wss://\"></el-option>\n                                </el-select>\n                                <el-tag v-if=\"protocolStr === 'https:'\" type=\"danger\">https下仅能使用wss://连接</el-tag>\n                            </el-form-item>\n                            <el-form-item label=\"服务端口\">\n                                <el-input v-model=\"form.port\"></el-input>\n                            </el-form-item>\n                            <el-form-item label=\"服务地址\">\n                                <el-input v-model=\"form.domain\"></el-input>\n                            </el-form-item>\n                            <el-form-item label=\"服务路径\">\n                                <el-input v-model=\"form.path\"></el-input>\n                            </el-form-item>\n                            <el-form-item label=\"消息内容\">\n                                <el-input type=\"textarea\"\n                                          placeholder=\"请输入消息内容\n\n输入内容后【发送】按钮将会出现\"\n                                          v-model=\"form.msg\"\n                                          rows=\"5\"\n                                          class=\"input-with-select\">\n                                </el-input>\n                            </el-form-item>\n                            <el-divider content-position=\"center\">命令模拟</el-divider>\n\n                            <el-form-item v-for=\"(item, ind) in commands\" :key=\"ind\"\n                                          :label=\"item.title\"\n                                          v-show=\"item.command === 'Send' ? (form.msg?true:false) : true\"\n                            >\n                                <el-button\n                                    :type=\"item.command === 'Send'?'primary':''\"\n                                    @click=\"execStringCommand(item.command)\"\n                                >{{ item.command }}\n                                </el-button>\n                            </el-form-item>\n\n                        </el-form>\n                    </el-col>\n                </el-row>\n            </div>\n        </el-card>\n\n    </div>\n</template>\n\n<script>\nimport LayuiCode from \"../../../packages/layui/modules/code\";\nimport php from '../../../packages/utils/php'\n\nexport default {\n    name: 'Test',\n    components: {LayuiCode},\n    data() {\n        return {\n            form: {\n                domain: '192.168.56.4',\n                port: '9410',\n                path: '/',\n                state: {\n                    type: 'info',\n                    msg: '未连接'\n                },\n                log: '',\n                msg: ''\n            },\n            wsUrl: '',\n            WS_type: 'ws://',\n            protocolStr: 'https:',\n            onWS: {\n                onopen: {},\n                onclose: {},\n                onmessage: {},\n                onerror: {}\n            },\n            commands: [\n                {\n                    title: '发送消息',\n                    command: 'Send'\n                },\n                {\n                    title: '连接服务',\n                    command: 'ConnectServer'\n                },\n                {\n                    title: '关闭连接',\n                    command: 'CloseConnection'\n                },\n                {\n                    title: '连接状态',\n                    command: 'ConnectionStatus'\n                },\n                {\n                    title: '清除日志',\n                    command: 'ClearLog'\n                },\n            ],\n            socket: null,\n            loading: false\n        }\n    },\n    created() {\n        // 根据地址栏中的参数，修改表单中的默认信息\n        this.onChangeQuery(this.$route)\n\n        this.protocolStr = document.location.protocol;\n        this.make_wsUrl(true);\n\n        this.onWS = {\n            onopen: (event) => {\n                return this.setLog('#msg: 服务器连接成功');\n            },\n            onclose: (event) => {\n                return this.setLog('#断开连接:' + event.wasClean);\n            },\n            onmessage: (event) => {\n                return this.setLog('#服务器消息:' + event.data);\n            },\n            onerror: (event) => {\n                this.form.state = {\n                    type: 'danger',\n                    msg: 'Socket Error'\n                };\n                return this.setLog('#disconnected:' + (event.message || '服务未启用或服务地址错误'));\n            }\n        };\n\n        window.WS = this;\n    },\n    methods: {\n        setLog(...res) {\n            if (typeof res[0] === 'string') {\n                let log = '';\n                log += php.date('Y-m-d H:i:s') + '\\n';\n                log += res[0] + '\\n\\n';\n                this.form.log = log + this.form.log;\n            } else {\n                console.log(...res);\n            }\n        },\n        execStringCommand(strCommand) {\n            switch (strCommand) {\n                case 'ConnectServer':\n                    this.loading = this.$loading({\n                        lock: true,\n                        text: '服务连接中。。。',\n                        spinner: 'el-icon-loading',\n                        background: 'rgba(0, 0, 0, 0.7)'\n                    });\n                    return this.connectServer();\n                case 'Send':\n                    this.socket.send(this.form.msg);\n                    break;\n                case 'CloseConnection':\n                    if (this.socket) this.socket.close();\n                    return this.form.state = {\n                        type: 'warning',\n                        msg: 'Socket 服务已关闭'\n                    };\n                case 'ConnectionStatus':\n                    let status = this.getSocketStatus();\n                    switch (true) {\n                        case status === '0':\n                            this.form.state = {\n                                type: 'info',\n                                msg: '未连接'\n                            };\n                            break;\n                        case (status === '1' || status === '2'):\n                            this.form.state = {\n                                type: 'success',\n                                msg: 'Socket 服务连接成功'\n                            };\n                            break;\n                        case (status === '3' || status === '4'):\n                            this.form.state = {\n                                type: 'warning',\n                                msg: 'Socket 服务已关闭'\n                            };\n                            break;\n                        default:\n                            this.form.state = {\n                                type: 'danger',\n                                msg: 'Socket Error'\n                            };\n                    }\n                    return true;\n                case 'ClearLog':\n                    return this.form.log = '';\n            }\n        },\n        make_wsUrl(auto = false) {\n            if (auto) {\n                if (this.protocolStr === \"https:\") {\n                    this.WS_type = 'wss://';\n                } else {\n                    this.WS_type = 'ws://';\n                }\n            }\n            this.wsUrl += this.WS_type + this.form.domain + ':' + this.form.port + this.form.path;\n        },\n        connectServer() {\n            let that = this;\n            this.wsUrl = '';\n            try {\n                if (this.wsUrl === '') this.make_wsUrl();\n                this.socket = new WebSocket(this.wsUrl);\n            } catch (evt) {\n                this.loading.close()\n                this.form.state = {\n                    type: 'danger',\n                    msg: 'Socket Error'\n                };\n                if (!evt.data) {\n                    this.setLog('#new WebSocket error: 未启用WebSocket服务，或参数配置错误');\n                    console.log(evt)\n                } else {\n                    this.setLog('#new WebSocket error:' + evt.data);\n                }\n                this.socket = null;\n                return;\n            }\n            this.socket.onopen = function (event) {\n                that.loading.close()\n                that.form.state = {\n                    type: 'success',\n                    msg: 'Socket 服务连接成功'\n                };\n                typeof that.onWS.onopen === 'function' && that.onWS.onopen.call(that, event);\n            };\n            this.socket.onclose = function (event) {\n                that.loading.close()\n                that.form.state = {\n                    type: 'warning',\n                    msg: 'Socket 服务已关闭'\n                };\n                typeof that.onWS.onclose === 'function' && that.onWS.onclose.call(that, event);\n            };\n            this.socket.onmessage = function (event) {\n                that.loading.close()\n                typeof that.onWS.onmessage === 'function' && that.onWS.onmessage.call(that, event);\n            };\n            this.socket.onerror = function (event) {\n                that.loading.close()\n                that.form.state = {\n                    type: 'danger',\n                    msg: 'Socket Error'\n                };\n                typeof that.onWS.onerror === 'function' && that.onWS.onerror.call(that, event);\n            };\n        },\n        getSocketStatus() {\n            var that = this;\n            if (null == that.socket) {\n                that.setLog('未连接websocket服务');\n                return '0';\n            }\n            switch (that.socket.readyState) {\n                case that.socket.CONNECTING:\n                    that.setLog(\"websocket服务连接中\");\n                    return '1';\n\n                case that.socket.OPEN:\n                    that.setLog(\"websocket服务连接成功\");\n                    return '2';\n\n                case that.socket.CLOSING:\n                    that.setLog(\"websocket服务关闭中\");\n                    return '3';\n\n                case that.socket.CLOSED:\n                    that.setLog('websocket服务已关闭');\n                    return '4';\n                default:\n                    that.setLog(\"未知错误\");\n                    return '-1';\n            }\n        },\n        onChangeQuery(route) {\n            const queryDomain = route.query.domain;\n            const queryPort = route.query.port;\n            if (queryDomain) {\n                this.form.domain = queryDomain\n            }\n            if (queryPort) {\n                this.form.port = queryPort\n            }\n        }\n    },\n    watch: {\n        WS_type() {\n            let socketStatus = this.getSocketStatus();\n            if (socketStatus === '1' || socketStatus === '2') this.execStringCommand('CloseConnection');\n            this.make_wsUrl();\n        },\n        $route(route) {\n            this.onChangeQuery(route)\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\">\n.text {\n    font-size: 15px;\n}\n\n.item {\n    margin-bottom: 30px;\n}\n\n.clearfix:before,\n.clearfix:after {\n    display: table;\n    content: \"\";\n}\n\n.clearfix:after {\n    clear: both\n}\n\n\n.readIdCard {\n    .el-card:first-child {\n        margin-top: 0;\n    }\n\n    .el-card {\n        margin-top: 28px;\n    }\n\n    .image-slot {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        width: 100%;\n        height: 100%;\n        background: #f5f7fa;\n        color: #909399;\n        font-size: 14px;\n    }\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=f15002c4&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}