{"version":3,"sources":["webpack:///./examples/views/websocket/index.vue?d931","webpack:///./examples/views/websocket/index.vue?fc41","webpack:///examples/views/websocket/index.vue","webpack:///./examples/views/websocket/index.vue?e2f1","webpack:///./examples/views/websocket/index.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","attrs","slot","staticStyle","ref","form","state","type","_s","msg","model","value","callback","$$v","$set","expression","_e","on","$event","execStringCommand","_l","item","ind","key","title","command","staticRenderFns","name","components","LayuiCode","domain","port","path","log","wsUrl","onWS","onopen","onclose","onmessage","onerror","commands","socket","loading","setLog","event","wasClean","data","message","window","VM","methods","res","php","date","console","strCommand","$loading","lock","text","spinner","background","connectServer","send","close","status","getSocketStatus","that","protocolStr","document","location","protocol","WebSocket","evt","call","readyState","CONNECTING","OPEN","CLOSING","CLOSED","component"],"mappings":"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","file":"js/chunk-2ff73526.1bdc2c78.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=scss&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"readIdCard\"},[_c('h2',[_vm._v(\"WebSocket\")]),_c('el-card',{staticClass:\"box-card\",attrs:{\"shadow\":\"hover\"}},[_c('div',{staticClass:\"clearfix\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(\"直接测试\")])]),_c('div',{staticClass:\"text item\"},[_c('p',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"使用本控制台测试时，请先配置WebSocket\")]),_c('el-divider'),_c('el-row',{attrs:{\"gutter\":25}},[_c('el-col',{attrs:{\"xs\":24,\"sm\":24,\"md\":15,\"lg\":15,\"xl\":15}},[_c('el-form',{ref:\"form\",attrs:{\"label-position\":\"top\",\"model\":_vm.form,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"服务状态\"}},[_c('el-tag',{attrs:{\"type\":_vm.form.state.type}},[_vm._v(_vm._s(_vm.form.state.msg))])],1),(_vm.form.log)?_c('el-form-item',{attrs:{\"label\":\"日志\"}},[_c('div',{staticClass:\"showLog\"},[_c('el-input',{attrs:{\"type\":\"textarea\",\"rows\":15,\"size\":'medium'},model:{value:(_vm.form.log),callback:function ($$v) {_vm.$set(_vm.form, \"log\", $$v)},expression:\"form.log\"}})],1)]):_vm._e()],1)],1),_c('el-col',{attrs:{\"xs\":24,\"sm\":24,\"md\":9,\"lg\":9,\"xl\":9}},[_c('el-form',{ref:\"form\",attrs:{\"label-position\":\"left\",\"model\":_vm.form,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"服务端口\"}},[_c('el-input',{model:{value:(_vm.form.port),callback:function ($$v) {_vm.$set(_vm.form, \"port\", $$v)},expression:\"form.port\"}})],1),_c('el-form-item',{attrs:{\"label\":\"服务地址\"}},[_c('el-input',{model:{value:(_vm.form.domain),callback:function ($$v) {_vm.$set(_vm.form, \"domain\", $$v)},expression:\"form.domain\"}})],1),_c('el-form-item',{attrs:{\"label\":\"服务路径\"}},[_c('el-input',{model:{value:(_vm.form.path),callback:function ($$v) {_vm.$set(_vm.form, \"path\", $$v)},expression:\"form.path\"}})],1),_c('el-input',{staticClass:\"input-with-select\",attrs:{\"placeholder\":\"请输入内容\"},model:{value:(_vm.form.msg),callback:function ($$v) {_vm.$set(_vm.form, \"msg\", $$v)},expression:\"form.msg\"}},[_c('el-button',{attrs:{\"slot\":\"append\",\"icon\":\"el-icon-s-promotion\"},on:{\"click\":function($event){return _vm.execStringCommand('Send')}},slot:\"append\"})],1),_c('el-divider',{attrs:{\"content-position\":\"center\"}},[_vm._v(\"命令模拟\")]),_vm._l((_vm.commands),function(item,ind){return _c('el-form-item',{key:ind,attrs:{\"label\":item.title}},[_c('el-button',{on:{\"click\":function($event){return _vm.execStringCommand(item.command)}}},[_vm._v(_vm._s(item.command))])],1)})],2)],1)],1)],1)])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"readIdCard\">\n        <h2>WebSocket</h2>\n\n        <!--        <el-card class=\"box-card\" shadow=\"hover\">\n                    <div slot=\"header\" class=\"clearfix\">\n                        <span>基础描述</span>\n                    </div>\n                    <div class=\"text item\">\n                        <p><strong>硬件设备：</strong>诺塔斯 NTS-L7-2IN1 二合一读卡器</p>\n                        <p><strong>exe软件见引用资源：</strong>LocalWsServer20200706.zip</p>\n                        <p><strong>电脑系统：</strong>win7/10</p>\n                        <p style=\"margin-top: 2rem\"><strong>说明：</strong></p>\n                        <p style=\"text-indent: 2em;\">先将硬件设备插入电脑，然后打开LocalWsServer软件，在软件配置中配置账号密码，并勾选自动读取，接着保存参数即可。</p>\n                        <p style=\"text-indent: 2em;\">测试账号：20002</p>\n                        <p style=\"text-indent: 2em;\">测试密码：123456</p>\n                        <p style=\"text-indent: 2em;\">\n                            正式账号在<a href=\"http://www.shenfenshibie.com/\" target=\"_blank\"\n                                    rel=\"noopener\">http://www.shenfenshibie.com/</a>&nbsp;申请，并联系设备商审核\n                        </p>\n                    </div>\n                </el-card>-->\n\n\n        <!--        <el-card class=\"box-card\" shadow=\"hover\">\n                    <div slot=\"header\" class=\"clearfix\">\n                        <span>本页面将把lotussmart，暴露到window变量中，调用方法示例：</span>\n                    </div>\n                    <div class=\"text item\">\n                        <layui-code\n                            :code=\"'// 该方法仅适用于自动读卡\\n' +\n                             'lotussmart.sfz.runReadIDCard({\\n'+\n        '    onmessage: (cardInfo)=&gt;{\\n'+\n        '        console.log(cardInfo)\\n'+\n        '    }\\n'+\n        '})'\"\n                            :title=\"'自动读取身份证信息'\"\n                        />\n                    </div>\n                </el-card>-->\n        <el-card class=\"box-card\" shadow=\"hover\">\n            <div slot=\"header\" class=\"clearfix\">\n                <span>直接测试</span>\n            </div>\n            <div class=\"text item\">\n                <p style=\"text-align: center\">使用本控制台测试时，请先配置WebSocket</p>\n                <el-divider></el-divider>\n                <el-row :gutter=\"25\">\n                    <el-col :xs=\"24\" :sm=\"24\" :md=\"15\" :lg=\"15\" :xl=\"15\">\n                        <el-form label-position=\"top\" ref=\"form\" :model=\"form\" label-width=\"100px\">\n                            <el-form-item label=\"服务状态\">\n                                <el-tag :type=\"form.state.type\">{{ form.state.msg }}</el-tag>\n                            </el-form-item>\n                            <el-form-item v-if=\"form.log\" label=\"日志\">\n                                <div class=\"showLog\">\n                                    <el-input\n                                        type=\"textarea\"\n                                        v-model=\"form.log\"\n                                        :rows=\"15\"\n                                        :size=\"'medium'\"\n                                    />\n                                </div>\n                            </el-form-item>\n                        </el-form>\n                    </el-col>\n                    <el-col :xs=\"24\" :sm=\"24\" :md=\"9\" :lg=\"9\" :xl=\"9\">\n                        <el-form label-position=\"left\" ref=\"form\" :model=\"form\" label-width=\"100px\">\n                            <el-form-item label=\"服务端口\">\n                                <el-input v-model=\"form.port\"></el-input>\n                            </el-form-item>\n                            <el-form-item label=\"服务地址\">\n                                <el-input v-model=\"form.domain\"></el-input>\n                            </el-form-item>\n                            <el-form-item label=\"服务路径\">\n                                <el-input v-model=\"form.path\"></el-input>\n                            </el-form-item>\n                            <el-input placeholder=\"请输入内容\" v-model=\"form.msg\" class=\"input-with-select\">\n                                <el-button slot=\"append\" @click=\"execStringCommand('Send')\" icon=\"el-icon-s-promotion\"></el-button>\n                            </el-input>\n                            <el-divider content-position=\"center\">命令模拟</el-divider>\n\n                            <el-form-item v-for=\"(item, ind) in commands\" :key=\"ind\"\n                                          :label=\"item.title\"\n                            >\n                                <el-button @click=\"execStringCommand(item.command)\">{{ item.command }}</el-button>\n                            </el-form-item>\n\n                        </el-form>\n                    </el-col>\n                </el-row>\n            </div>\n        </el-card>\n\n    </div>\n</template>\n\n<script>\nimport LayuiCode from \"../../../packages/layui/modules/code\";\nimport php from '../../../packages/utils/php'\n\nexport default {\n    name: 'Test',\n    components: {LayuiCode},\n    data() {\n        return {\n            form: {\n                domain: '127.0.0.1',\n                port: '10215',\n                path: '/',\n                state: {\n                    type: 'info',\n                    msg: '未连接'\n                },\n                log: '',\n                msg: ''\n            },\n            wsUrl: '',\n            onWS: {\n                onopen: {},\n                onclose: {},\n                onmessage: {},\n                onerror: {}\n            },\n            commands: [\n                {\n                    title: '连接服务',\n                    command: 'ConnectServer'\n                },\n                {\n                    title: '关闭连接',\n                    command: 'CloseConnection'\n                },\n                {\n                    title: '连接状态',\n                    command: 'ConnectionStatus'\n                },\n                {\n                    title: '清除日志',\n                    command: 'ClearLog'\n                },\n            ],\n            socket: null,\n            loading: false\n        }\n    },\n    created() {\n        this.onWS = {\n            onopen: () => {\n                return this.setLog('#msg: 服务器连接成功');\n            },\n            onclose: (event) => {\n                return this.setLog('#断开连接:' + event.wasClean);\n            },\n            onmessage: (event) => {\n                return this.setLog('#收到消息:' + event.data);\n            },\n            onerror: (event) => {\n                this.form.state = {\n                    type: 'danger',\n                    msg: 'Socket Error'\n                };\n                return this.setLog('#disconnected:' + (event.message || '服务未启用或服务地址错误'));\n            }\n        };\n        window.VM = this;\n    },\n    methods: {\n        setLog(...res) {\n            if (typeof res[0] === 'string') {\n                let log = '';\n                log += php.date('Y-m-d H:i:s') + '\\n';\n                log += res[0] + '\\n\\n';\n                this.form.log = log + this.form.log;\n            } else {\n                console.log(...res);\n            }\n        },\n        execStringCommand(strCommand) {\n            switch (strCommand) {\n                case 'ConnectServer':\n                    this.loading = this.$loading({\n                        lock: true,\n                        text: '服务连接中。。。',\n                        spinner: 'el-icon-loading',\n                        background: 'rgba(0, 0, 0, 0.7)'\n                    });\n                    return this.connectServer();\n                case 'Send':\n                        this.socket.send(this.form.msg);\n                        break;\n                case 'CloseConnection':\n                    this.socket.close();\n                    return this.form.state = {\n                        type: 'warning',\n                        msg: 'Socket 服务已关闭'\n                    };\n                case 'ConnectionStatus':\n                    let status = this.getSocketStatus();\n                    switch (true) {\n                        case status === '0':\n                            this.form.state = {\n                                type: 'info',\n                                msg: '未连接'\n                            };\n                            break;\n                        case (status === '1' || status === '2'):\n                            this.form.state = {\n                                type: 'success',\n                                msg: 'Socket 服务连接成功'\n                            };\n                            break;\n                        case (status === '3' || status === '4'):\n                            this.form.state = {\n                                type: 'warning',\n                                msg: 'Socket 服务已关闭'\n                            };\n                            break;\n                        default:\n                            this.form.state = {\n                                type: 'danger',\n                                msg: 'Socket Error'\n                            };\n                    }\n                    return true;\n                case 'ClearLog':\n                    return this.form.log = '';\n            }\n        },\n        connectServer() {\n            let that = this\n                , protocolStr = document.location.protocol;\n\n            try {\n                if (protocolStr === \"https:\") {\n                    this.wsUrl = 'wss://';\n                } else {\n                    this.wsUrl = 'ws://';\n                }\n                this.wsUrl += this.form.domain + ':' + this.form.port + this.form.path;\n                this.socket = new WebSocket(this.wsUrl);\n\n            } catch (evt) {\n                this.loading.close()\n                this.form.state = {\n                    type: 'danger',\n                    msg: 'Socket Error'\n                };\n                if (!evt.data) {\n                    this.setLog('#new WebSocket error: 未启用WebSocket服务，或参数配置错误');\n                    console.log(evt)\n                } else {\n                    this.setLog('#new WebSocket error:' + evt.data);\n                }\n                this.socket = null;\n                return;\n            }\n            this.socket.onopen = function (event) {\n                that.loading.close()\n                that.form.state = {\n                    type: 'success',\n                    msg: 'Socket 服务连接成功'\n                };\n                typeof that.onWS.onopen === 'function' && that.onWS.onopen.call(that, event);\n            };\n            this.socket.onclose = function (event) {\n                that.loading.close()\n                that.form.state = {\n                    type: 'warning',\n                    msg: 'Socket 服务已关闭'\n                };\n                typeof that.onWS.onclose === 'function' && that.onWS.onclose.call(that, event);\n            };\n            this.socket.onmessage = function (event) {\n                that.loading.close()\n                typeof that.onWS.onmessage === 'function' && that.onWS.onmessage.call(that, event);\n            };\n            this.socket.onerror = function (event) {\n                that.loading.close()\n                that.form.state = {\n                    type: 'danger',\n                    msg: 'Socket Error'\n                };\n                typeof that.onWS.onerror === 'function' && that.onWS.onerror.call(that, event);\n            };\n        },\n        getSocketStatus() {\n            var that = this;\n            if (null == that.socket) {\n                that.setLog('未连接websocket服务');\n                return '0';\n            }\n            switch (that.socket.readyState) {\n                case that.socket.CONNECTING:\n                    that.setLog(\"websocket服务连接中\");\n                    return '1';\n\n                case that.socket.OPEN:\n                    that.setLog(\"websocket服务连接成功\");\n                    return '2';\n\n                case that.socket.CLOSING:\n                    that.setLog(\"websocket服务关闭中\");\n                    return '3';\n\n                case that.socket.CLOSED:\n                    that.setLog('websocket服务已关闭');\n                    return '4';\n                default:\n                    that.setLog(\"未知错误\");\n                    return '-1';\n            }\n        }\n    },\n}\n</script>\n\n<style lang=\"scss\">\n.text {\n    font-size: 15px;\n}\n\n.item {\n    margin-bottom: 30px;\n}\n\n.clearfix:before,\n.clearfix:after {\n    display: table;\n    content: \"\";\n}\n\n.clearfix:after {\n    clear: both\n}\n\n\n.readIdCard {\n    .el-card:first-child {\n        margin-top: 0;\n    }\n\n    .el-card {\n        margin-top: 28px;\n    }\n\n    .image-slot {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        width: 100%;\n        height: 100%;\n        background: #f5f7fa;\n        color: #909399;\n        font-size: 14px;\n    }\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=af86f702&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}